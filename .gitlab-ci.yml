default:
  tags:
    - serhii_local_docker

# image: tiangolo/docker-with-compose:latest

stages:
# - build
- test

# variables:
#   CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   CONTAINER_LATEST: $CI_REGISTRY_IMAGE:latest

# build:
#   stage: build
#   before_script:
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#   script:
#     - cd docker/billrun-docker/billrun-php74
#     - docker pull $CONTAINER_LATEST
#     - docker build --cache-from $CONTAINER_LATEST --tag $CONTAINER_IMAGE --tag $CONTAINER_LATEST .
#     - docker push $CONTAINER_IMAGE
#     - docker push $CONTAINER_LATEST

integration_backend_tests:
  image: tiangolo/docker-with-compose:latest
  stage: test
  before_script:
    # - docker run -v /var/run/docker.sock:/var/run/docker.sock docker
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - cd docker/billrun-docker
    - docker-compose -f docker-compose-php74.yml build
    - docker-compose -f docker-compose-php74.yml up -d
    - cd 
    - pwd
    - cd integration_tests
    # - echo ENV = http://docker:8074 > .env
    - python3 --version  # For debugging
    - pip3 install virtualenv
    - python3 -m venv venv
    - source venv/bin/activate
    - pip3 install -e .
  script:
    - pytest -m smoke --junitxml=xml_report_backend.xml
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/integration_tests/allure-results/*
      - $CI_PROJECT_DIR/integration_tests/xml_report_backend.xml
    reports:
      junit: $CI_PROJECT_DIR/integration_tests/xml_report_backend.xml
    expire_in: 1 day

# integration_ui_tests:
#   image: python:3.10
#   stage: test
#   before_script:
#     - apt-get update
#     - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
#     - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
#     - apt-get update && apt-get install -y google-chrome-stable # install chrome browser for UI tests
#     - cd integration_tests
#     - echo ENV = $TEST_ENV > .env
#     - python3 --version  # For debugging
#     - pip3 install virtualenv
#     - python3 -m venv venv
#     - source venv/bin/activate
#     - pip3 install -e .
#   script:
#     - pytest -m ui --junitxml=xml_report_ui.xml
#   artifacts:
#     when: always
#     paths:
#       - $CI_PROJECT_DIR/integration_tests/allure-results/*
#       - $CI_PROJECT_DIR/integration_tests/xml_report_ui.xml
#     reports:
#       junit: $CI_PROJECT_DIR/integration_tests/xml_report_ui.xml
#     expire_in: 1 day